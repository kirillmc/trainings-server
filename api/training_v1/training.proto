syntax = "proto3";

package training_v1;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
//import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "github.com/kirillmc/trainings-server/pkg/training_v1;training_v1";

option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info:{
    title:"Training SERVER API",
    version:"1.0.0",
    contact:{
      name:"Telegram",
      email:"https://t.me/McK03"
    };
  };

  host:"localhost:8080",
  schemes:HTTP,
  schemes:HTTPS,
  consumes:"application/json",
  produces:"application/json",
};

service TrainingV1{
  rpc GetPublicTrainingPrograms(google.protobuf.Empty) returns (GetPublicTrainingProgramsResponse){// Получить список тренировочных программ в общем доступе
    option(google.api.http) = {
      get: "/api/public-programs"
    };
  }

  rpc GetTrainingPrograms(GetRequest) returns (GetTrainingProgramsResponse){// Получить список тренировочных программ по id пользователя
    option(google.api.http) = {
      get: "/api/programs/{id}"
    };
  }

  rpc GetTrainingProgram(GetRequest) returns (GetTrainingProgramResponse){// Получить одну тренировочную программу
    option(google.api.http) = {
      get: "/api/program/{id}"
    };
  }

  rpc GetTrainDays(GetRequest) returns (GetTrainDaysResponse){// Получить список тренировочных дней
    option(google.api.http) = {
      get: "/api/programs/train_days/{id}"
    };
  }

  rpc GetTrainDay(GetRequest) returns (GetTrainDayResponse){// Получить один тренировочный день
    option(google.api.http) = {
      get: "/api/programs/train_day/{id}"
    };
  }

  rpc GetExercises(GetRequest) returns (GetExercisesResponse){// Получить список упражнений
    option(google.api.http) = {
      get: "/api/programs/train_days/exercises/{id}"
    };
  }

  rpc GetExercise(GetRequest) returns (GetExerciseResponse){// Получить одно упражнение
    option(google.api.http) = {
      get: "/api/programs/train_days/exercise/{id}"
    };
  }

  rpc GetSets(GetRequest) returns (GetSetsResponse){// Получить список подходов
    option(google.api.http) = {
      get: "/api/programs/train_days/exercises/sets/{id}"
    };
  }

  rpc GetSet(GetRequest) returns (GetSetResponse){// Получить один подход
    option(google.api.http) = {
      get: "/api/programs/train_days/exercises/set/{id}"
    };
  }

  rpc GetStatistic(GetRequest) returns (GetStatisticResponse){// Получить статистику по подходу
    option(google.api.http) = {
      get: "/api/programs/train_days/exercises/sets/statistic/{id}"
    };
  }

  //----------------------------------------------------------------------------------------------------------------------

  rpc CreateTrainingProgram(CreateTrainingProgramRequest) returns (CreateResponse){// Создать одну тренировочную программу
    option(google.api.http) = {
      post: "/api/programs"
      body:"*"
    };
  }

  rpc CreateTrainDay(CreateTrainDayRequest) returns (CreateResponse){// Создать один тренировочный день
    option(google.api.http) = {
      post: "/api/programs/train_days"
      body:"*"
    };
  }

  rpc CreateExercise(CreateExerciseRequest) returns (CreateResponse){// Создать одно упражнение
    option(google.api.http) = {
      post: "/api/programs/train_days/exercises"
      body:"*"
    };
  }

  rpc CreateSet(CreateSetRequest) returns (CreateResponse){// Создать один подход
    option(google.api.http) = {
      post: "/api/programs/train_days/exercises/sets"
      body:"*"
    };
  }

  rpc CreateStatistic(CreateStatisticRequest) returns (CreateResponse){// Создать статистику по подходу
    option(google.api.http) = {
      post: "/api/programs/train_days/exercises/sets/statistic"
      body:"*"
    };
  }

  //----------------------------------------------------------------------------------------------------------------------

  rpc UpdateTrainingProgram(UpdateTrainingProgramRequest) returns (google.protobuf.Empty){// Обновить одну тренировочную программу
    option(google.api.http) = {
      patch: "/api/programs"
      body:"*"
    };
  }
  rpc UpdateTrainDay(UpdateTrainDayRequest) returns (google.protobuf.Empty){// Обновить один тренировочный день
    option(google.api.http) = {
      patch: "/api/programs/train_days"
      body:"*"
    };
  }
  rpc UpdateExercise(UpdateExerciseRequest) returns (google.protobuf.Empty){// Обновить одно упражнение
    option(google.api.http) = {
      patch: "/api/programs/train_days/exercises"
      body:"*"
    };
  }
  rpc UpdateSet(UpdateSetRequest) returns (google.protobuf.Empty){// Обновить один подход
    option(google.api.http) = {
      patch: "/api/programs/train_days/exercises/sets"
      body:"*"
    };
  }
  rpc UpdateStatistic(UpdateStatisticRequest) returns (google.protobuf.Empty){// Обновить статистику по подходу
    option(google.api.http) = {
      patch: "/api/programs/train_days/exercises/sets/statistic"
      body:"*"
    };
  }

  //----------------------------------------------------------------------------------------------------------------------

  rpc DeleteTrainingProgram(DeleteRequest) returns (google.protobuf.Empty){// Удалить одну тренировочную программу
    option(google.api.http) = {
      delete: "/api/programs/{id}"
    };
  }
  rpc DeleteTrainDay(DeleteRequest) returns (google.protobuf.Empty){// Удалить один тренировочный день
    option(google.api.http) = {
      delete: "/api/programs/train_days/{id}"
    };
  }
  rpc DeleteExercise(DeleteRequest) returns (google.protobuf.Empty){// Удалить одно упражнение
    option(google.api.http) = {
      delete: "/api/programs/train_days/exercises/{id}"
    };
  }
  rpc DeleteSet(DeleteRequest) returns (google.protobuf.Empty){// Удалить один подход
    option(google.api.http) = {
      delete: "/api/programs/train_days/exercises/sets/{id}"
    };
  }

  rpc DeleteStatistic(DeleteRequest) returns (google.protobuf.Empty){// Удалить статистику по подходу
    option(google.api.http) = {
      delete: "/api/programs/train_days/exercises/sets/statistic/{id}"
    };
  }

  rpc AddProgramFromPublic(AddProgramFromPublicRequest) returns (google.protobuf.Empty){// Добавить программу из общего доступа
    option(google.api.http) = {
      post: "/api/programs/add-program-from-public/{program_id}"
      body:"*"
    };
  }

  rpc SetTechnic(SetTechnicRequest) returns (google.protobuf.Empty){// Отправить данные о технике выполнения упражнения
    option(google.api.http) = {
      post: "/api/programs/technic"
      body:"*"
    };
  }

  rpc GetTechnic(GetTechnicRequest) returns (GetTechnicResponse){// Получить данные о технике выполнения упражнения
    option(google.api.http) = {
      get: "/api/programs/technic/{exercise_id}"
    };
  }

}



//----------------------------------------------------------------------------------------------------------------------

enum Status{
  UNKNOWN = 0;
  LOCAl = 1;
  MODERING = 2;
  PUBLIC = 3;
}

//----------------------------------------------------------------------------------------------------------------------

message TrainingProgramInfo{
  string program_name = 1;
  int64 user_id = 2;
  string description = 3;
  Status status = 4;
}

message PublicTrainingProgramInfo{
  string program_name = 1;
  int64 author_id = 2;
  string description = 3;
}

message TrainDayInfo{
  string day_name = 1;
  int64 program_id = 2;
  string description = 3;
}

message ExerciseInfo{
  string exercise_name = 1;
  int64 day_id = 2;
  string pictures = 3;
  string description = 4;
}

message SetInfo{
  int64 exercise_id = 1;
  int64 quantity = 2;
  double weight = 3;
}

message StatisticInfo{
  int64 set_id = 1;
  int64 exercise_id = 2;
  int64 train_day_id = 3;
  int64 program_id = 4;
  int64 quantity = 5;
  double weight = 6;

}

//----------------------------------------------------------------------------------------------------------------------

message UpdateTrainingProgramInfo{
  google.protobuf.StringValue program_name = 1;
  google.protobuf.StringValue description = 2;
  Status Status = 3;
}

message UpdateTrainDayInfo{
  google.protobuf.StringValue day_name = 1;
  google.protobuf.StringValue description = 2;
}

message UpdateExerciseInfo{
  google.protobuf.StringValue exercise_name = 1;
  google.protobuf.StringValue pictures = 2;
  google.protobuf.StringValue description = 3;
}

message UpdateSetInfo{
  google.protobuf.Int64Value quantity = 1;
  google.protobuf.DoubleValue weight = 2;
}

message UpdateStatisticInfo{
  google.protobuf.Int64Value quantity = 1;
  google.protobuf.DoubleValue weight = 2;

}

//----------------------------------------------------------------------------------------------------------------------

message TrainingProgram{
  int64 id = 1;
  TrainingProgramInfo info = 2;
}

message PublicTrainingProgram{
  int64 id = 1;
  PublicTrainingProgramInfo info = 2;
}

message TrainDay{
  sint64 id = 1;
  TrainDayInfo info = 2;
}

message Exercise{
  int64 id = 1;
  ExerciseInfo info = 2;
}

message Set{
  int64 id = 1;
  SetInfo info = 2;
}

message Statistic{
  int64 id = 1;
  StatisticInfo info = 2;
  google.protobuf.Timestamp time = 3;
}

//----------------------------------------------------------------------------------------------------------------------

message CreateTrainingProgramRequest{
  TrainingProgramInfo info = 1;
}

message CreateResponse{
  int64 id = 1;
}

message CreateTrainDayRequest{
  TrainDayInfo info = 1;
}

message CreateExerciseRequest{
  ExerciseInfo info = 1;
}

message CreateSetRequest{
  SetInfo info = 1;
}

message CreateStatisticRequest{
  StatisticInfo info = 1;
}

//----------------------------------------------------------------------------------------------------------------------

message UpdateTrainingProgramRequest{
  int64 id = 1;
  UpdateTrainingProgramInfo info = 2;
}

message UpdateTrainDayRequest{
  int64 id = 1;
  UpdateTrainDayInfo info = 2;
}

message UpdateExerciseRequest{
  int64 id = 1;
  UpdateExerciseInfo info = 2;
}

message UpdateSetRequest{
  int64 id = 1;
  UpdateSetInfo info = 2;
}

message UpdateStatisticRequest{
  int64 id = 1;
  UpdateStatisticInfo info = 2;
}

//----------------------------------------------------------------------------------------------------------------------

message DeleteRequest{
  int64 id = 1;
}


//----------------------------------------------------------------------------------------------------------------------

message GetRequest{
  int64 id = 1;
}

message GetTrainingProgramsResponse{
  repeated TrainingProgram train_programs = 1;
}

message GetPublicTrainingProgramsResponse{
  repeated PublicTrainingProgram train_programs = 1;
}

message GetTrainingProgramResponse{
  TrainingProgram train_program = 1;
}

message GetTrainDaysResponse{
  repeated TrainDay train_days = 1;
}

message GetTrainDayResponse{
  TrainDay train_day = 1;
}

message GetExercisesResponse{
  repeated Exercise exercises = 1;
}

message GetExerciseResponse{
  Exercise exercise = 1;
}

message GetSetsResponse{
  repeated Set sets = 1;
}

message GetSetResponse{
  Set set = 1;
}

message GetStatisticResponse{
  Statistic statistic = 1;
}

message AddProgramFromPublicRequest{
  int64 program_id = 1;
  int64 user_id = 2;
}

message Dots{
  int64 dot_number = 1;
  double x_coordinate = 2;
  double y_coordinate = 3;
}

message Position{
  int64 position_number = 1;
  repeated Dots dots = 2;
}

message Technic{
  int64 exercise_id = 1;
  repeated Position positions = 2;
}

message SetTechnicRequest{
 repeated Technic technics = 1;
}

message GetTechnicRequest{
  int64 exercise_id = 1;
}

message GetTechnicResponse{
  int64 technic_id = 1;
  int64 exercise_id = 2;
  repeated  Position positions = 3;
}